import pandas as pd
from sklearn.preprocessing import StandardScaler
from sklearn.decomposition import PCA[p]
import matplotlib.pyplot as plt
import seaborn as sns

data = pd.read_csv("/Users/prathamesh/Downloads/Wine.csv")
data

red_white_data = data[data['Customer_Segment'].isin([1, 2])]

features = red_white_data.columns[1:]

X = data[features]
y = data['Customer_Segment']

scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

pca = PCA(n_components=2)
principal_components = pca.fit_transform(X_scaled)

principal_df = pd.DataFrame(data=principal_components, columns=['PC1', 'PC2'])

principal_df['Customer_Segment'] = y

plt.figure(figsize=(10, 7))
sns.scatterplot(data=principal_df, x='PC1', y='PC2', hue='Customer_Segment', palette='Set1', alpha=0.7)
plt.title('PCA of Wine Dataset (Red vs White)')
plt.xlabel('Principal Component 1')
plt.ylabel('Principal Component 2')
plt.show()

explained_variance = pca.explained_variance_ratio_
print(f"Explained variance by the 2 principal components: {explained_variance}")
print(f"Total explained variance: {sum(explained_variance)}")
